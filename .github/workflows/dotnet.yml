name: .NET CI/CD

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - uses: actions/checkout@v4

      - name: Load Environment Variables
        run: |
          set -o allexport || true
          . .env || true
          set +o allexport || true
        shell: bash

      # Check commit messages for Conventional Commits schema
      - name: Lint Commits
        uses: wagoid/commitlint-github-action@v4
        with:
          configFile: commitlint.config.js
      
      # Setup .NET environment
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      # Restore dependencies
      - name: Restore dependencies
        run: dotnet restore

      # Run dotnet-format for code style checks
      - name: Run Code Linting
        run: dotnet format MindWeb.sln --verify-no-changes

      # Build project
      - name: Build
        run: dotnet build --no-restore

      # Test project
      - name: Test
        run: dotnet test --no-build --verbosity normal

      # Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push Docker image for Frontend
      - name: Build and Push Frontend Docker Image
        run: |
          docker build -t ghcr.io/teddy55codes/mindweb-frontend:${{ github.sha }} -f ./MindWeb.Frontend/Dockerfile ./ 
          docker push ghcr.io/teddy55codes/mindweb-frontend:${{ github.sha }}
          docker build -t ghcr.io/teddy55codes/mindweb-frontend:latest -f ./MindWeb.Frontend/Dockerfile ./ 
          docker push ghcr.io/teddy55codes/mindweb-frontend:latest

      # Build and push Docker image for API
      - name: Build and Push API Docker Image
        run: |
          docker build -t ghcr.io/teddy55codes/mindweb-api:${{ github.sha }} -f ./MindWeb.API/Dockerfile ./ 
          docker push ghcr.io/teddy55codes/mindweb-api:${{ github.sha }}
          docker build -t ghcr.io/teddy55codes/mindweb-api:latest -f ./MindWeb.API/Dockerfile ./ 
          docker push ghcr.io/teddy55codes/mindweb-api:latest

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Load Environment Variables
        run: |
          set -o allexport || true
          . .env || true
          set +o allexport || true
        shell: bash

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}

  smoke-test:
    runs-on: ubuntu-latest
    needs: deploy
  
    steps:
      # Checkout the code to access the .env file
      - name: Checkout Code
        uses: actions/checkout@v4
  
      # Debug .env File
      - name: Debug .env File
        run: |
          echo "Debugging .env file..."
          cat .env || echo "No .env file found!"
  
      # Load Environment Variables
      - name: Load Environment Variables
        run: |
          if [ -f .env ]; then
            echo "Loading .env file..."
            set -o allexport
            sed -i '1s/^\xEF\xBB\xBF//' .env # Remove BOM if present
            . .env
            set +o allexport
          else
            echo ".env file not found, skipping."
            exit 1
          fi
        shell: bash
  
      # Debug Loaded Environment Variables
      - name: Debug Loaded Environment Variables
        run: |
          echo "AZURE_WEBAPP_NAME: $AZURE_WEBAPP_NAME"
          echo "PROD_URL: $PROD_URL"
  
      # Smoke Test (Ping)
      - name: Smoke Test (Ping)
        run: |
          echo "Pinging production URL: $PROD_URL"
          if curl --fail -s "$PROD_URL"; then
            echo "Smoke test passed: $PROD_URL is reachable."
          else
            echo "Smoke test failed: $PROD_URL is not reachable."
            exit 1
          fi
