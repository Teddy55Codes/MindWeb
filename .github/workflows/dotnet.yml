name: .NET CI/CD

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - uses: actions/checkout@v4

      # Setup .NET environment
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      # Restore dependencies
      - name: Restore dependencies
        run: dotnet restore

      # Run dotnet-format for code style checks
      - name: Run Code Linting
        run: dotnet format MindWeb.sln --verify-no-changes

      # Build project
      - name: Build
        run: dotnet build --no-restore

      # Test project
      - name: Test
        run: dotnet test --no-build --verbosity normal

      # Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push Docker image for Frontend
      - name: Build and Push Frontend Docker Image
        run: |
          docker build -t ghcr.io/teddy55codes/mindweb-frontend:${{ github.sha }} -f ./MindWeb.Frontend/Dockerfile ./ 
          docker push ghcr.io/teddy55codes/mindweb-frontend:${{ github.sha }}
          docker build -t ghcr.io/teddy55codes/mindweb-frontend:latest -f ./MindWeb.Frontend/Dockerfile ./ 
          docker push ghcr.io/teddy55codes/mindweb-frontend:latest

      # Build and push Docker image for API
      - name: Build and Push API Docker Image
        run: |
          docker build -t ghcr.io/teddy55codes/mindweb-api:${{ github.sha }} -f ./MindWeb.API/Dockerfile ./ 
          docker push ghcr.io/teddy55codes/mindweb-api:${{ github.sha }}
          docker build -t ghcr.io/teddy55codes/mindweb-api:latest -f ./MindWeb.API/Dockerfile ./ 
          docker push ghcr.io/teddy55codes/mindweb-api:latest

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Deploy to Azure Web App
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}

  smoke-test:
    runs-on: ubuntu-latest
    needs: deploy
    
    steps:
      # Smoke Test (Ping)
      - name: Smoke Test with ping
        run: |
          echo "Wait for website to start"
          sleep 5
          echo "Testing URL: ${{ vars.PROD_URL }}"
          if ping -c 1 "${{ vars.PROD_URL }}" &> /dev/null
          then
              echo "Smoke test passed."
          else
              echo "Smoke test failed."
              exit 1
          fi
 
